<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bonita and Beyond]]></title>
  <link href="http://pozil.github.io/atom.xml" rel="self"/>
  <link href="http://pozil.github.io/"/>
  <updated>2014-11-27T09:16:27+01:00</updated>
  <id>http://pozil.github.io/</id>
  <author>
    <name><![CDATA[Philippe Ozil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[BPM of Things]]></title>
    <link href="http://pozil.github.io/blog/2014/11/06/bpm-of-things/"/>
    <updated>2014-11-06T10:35:13+01:00</updated>
    <id>http://pozil.github.io/blog/2014/11/06/bpm-of-things</id>
    <content type="html"><![CDATA[<div class="floating-right">
    <img src="http://www.ow2.org/xwiki/bin/download/OW2con-2014/WebHome/OW2con14-date-4-6.png" alt="OW2con'14"/>    
</div>




<p class="blog-subtitle">IoT and Processes: a New Market Opportunity?</p>




<p>This post is related to a talk I gave at OW2con&#8217;14 in Paris.<br/>
The recording and slides can be viewed <a href="https://www.youtube.com/watch?v=gn4Vo8PzHpM" target="_blank" class="external">here</a></p>




<h3>Talk abstract</h3>


<p>Internet of Things will generate a lot of data and a lot of possible interactions.
How can you manage that, create alerts and drive your connected things?
We will show how to do that with a BPMS, and finish the presentation with the demonstration of 
connected objects running through a process.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Integrating a Connected Object With Bonita BPM via MQTT]]></title>
    <link href="http://pozil.github.io/blog/2014/10/29/integrating-a-connected-object-with-bonita/"/>
    <updated>2014-10-29T14:27:58+01:00</updated>
    <id>http://pozil.github.io/blog/2014/10/29/integrating-a-connected-object-with-bonita</id>
    <content type="html"><![CDATA[<div class="grey-container" style="vertical-align:top;" id="angular_webinars">Live from <a href="https://www.eclipsecon.org/europe2014/" target="_blank" style="white-space:normal; word-wrap:normal;">
<span title="EclispeCon Europe 2014" style="background:rgba(242, 147, 30, 0.9) url('https://www.eclipsecon.org/europe2014/sites/all/themes/eclipsecon_base/2014/eceurope2014/logo.png') 4px 0px/460px 100%; display:inline-block; width:464px; height:80px; border-radius:15px;"></span>
</a></div>




<h3>The concept</h3>


<p>This week, we are at EclipseCon and after spending some time around our booth, we discussed with our neighbours
<a href="http://www.bitreactive.com/" target="_blank" class="external">Bitreactive</a> about the possibility to create a joint technical demo.</p>

<p>I ended exploring the world of IoT and connected objects in order to put in place this technical demo.
I wanted to couple Bonita with the connected object from Bitreactive booth: a photo booth composed of a Raspberry Pi and a camera.</p>

<div style="text-align:center;"><span class='caption-wrapper'><img class='caption' src='http://pozil.github.io/images/2014-10-29-integrating-a-connected-object-with-bonita/bitreactive_booth.jpg' width='' height='' title='Bitreactive 'photo booth''><span class='caption-text'>Bitreactive &#8216;photo booth&#8217;</span></span></div>




<div class="floating-right">
    <img src="http://pozil.github.io/images/2014-10-29-integrating-a-connected-object-with-bonita/mqtt-logo.png" alt="MQTT"/> 
    <img src="http://www.eclipse.org/paho/images/paho_logo_400.png" alt="paho" style="height:74px;"/>
</div>


<p>In order to implement this demo I used the <a href="http://mqtt.org/" target="_blank" class="external">MQTT</a> protocol provided through the <a href="http://www.eclipse.org/paho/" target="_blank" class="external">paho</a> Java library to communicate with the device.</p>

<p class="small-bottom-margin">The goal of the demo was to integrate the photo booth device into a Bonita process representing a visa application.
Here is how this process works:</p>


<ol>
    <li>the applicant provides his personal details and attaches his picture taken at the photo booth</li>
    <li>the visa official review the application details and decides to grant or refuse the application</li>
</ol>




<h3>MQTT proof of concept via a Bonita connector</h3>


<p>Before I actually started to work on the visa application process I made sure that I could easily connect with MQTT via paho from a simple Java application and from a Bonita connector.</p>

<p class="small-bottom-margin">I ended up implementing a generic Bonita MQTT connector that could publish messages to a remote broker.
I have shared this connector with the community here:</p>


<ul>
    <li><a href="https://github.com/pozil/bonita-mqtt-publish-connector" target="_blank" class="external">GitHub Project</a></li>
    <li><a href="http://community.bonitasoft.com/project/mqtt-publish-connector" target="_blank" class="external">Bonita Community Project</a></li>
</ul>




<h3>Implementing the MQTT subscriber</h3>


<p>Once I was familiar with the MQTT paho client I stared to work on the &lsquo;image receiver&rsquo; program.</p>

<p class="small-bottom-margin">This Java program does the following:</p>


<ol>
    <li>subscribe to the photo booth MQTT topic</li>
    <li>get a message for each picture taken</li>
    <li>extract the image from it and place them in a directory in the Bonita server</li>
</ol>


<p>All of these operations can be summarized with the following Java code extract:</p>

<figure class='code'><figcaption><span>MQTT subscribe code sample</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Configure MQTT client</span>
</span><span class='line'><span class="n">MqttClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MqttClient</span><span class="o">(</span><span class="n">BROKER_URL</span><span class="o">,</span> <span class="n">CLIENT_ID</span><span class="o">,</span> <span class="k">new</span> <span class="nf">MemoryPersistence</span><span class="o">());</span>
</span><span class='line'><span class="n">MqttConnectOptions</span> <span class="n">options</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">MqttConnectOptions</span><span class="o">();</span>
</span><span class='line'><span class="n">options</span><span class="o">.</span><span class="na">setCleanSession</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Connect client to broker</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="na">connect</span><span class="o">(</span><span class="n">options</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Register a custom callback to process incoming messages</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="na">setCallback</span><span class="o">(</span><span class="k">new</span> <span class="nf">IncomingMessageCallback</span><span class="o">());</span>
</span><span class='line'><span class="c1">// Subscribe to image topic</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="na">subscribe</span><span class="o">(</span><span class="n">TOPIC</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Later disconnect client</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="na">disconnect</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>




<h3>Implementing the Bonita process</h3>


<p>Once the incoming images were stored within the Bonita server, I implemented a Bonita process with forms showing up the images.</p>

<div style="text-align:center;"><span class='caption-wrapper'><img class='caption' src='http://pozil.github.io/images/2014-10-29-integrating-a-connected-object-with-bonita/visa_application.png' width='' height='' title='Visa application process - New application form'><span class='caption-text'>Visa application process - New application form</span></span></div>




<div style="text-align:center;"><span class='caption-wrapper'><img class='caption' src='http://pozil.github.io/images/2014-10-29-integrating-a-connected-object-with-bonita/visa_application_review.png' width='' height='' title='Visa application process - Application review form'><span class='caption-text'>Visa application process - Application review form</span></span></div>




<h3>Resources</h3>


<ul>
    <li><a href="https://github.com/pozil/bonita-mqtt-publish-connector" target="_blank" class="external">GitHub Project</a></li>
    <li><a href="http://community.bonitasoft.com/project/mqtt-publish-connector" target="_blank" class="external">Bonita Community Project</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Integrating AngularJS With Bonita BPM]]></title>
    <link href="http://pozil.github.io/blog/2014/09/30/integrating-angularjs-with-bonita-bpm/"/>
    <updated>2014-09-30T11:48:07+02:00</updated>
    <id>http://pozil.github.io/blog/2014/09/30/integrating-angularjs-with-bonita-bpm</id>
    <content type="html"><![CDATA[<div class="grey-container" id="angular_webinars">
    <div class="small-bottom-margin"><b>Note:</b> part of this content is also accessible as a ongoing series of webinars:</div>
    <ul class="small-bottom-margin">
        <li><a href="http://fr.bonitasoft.com/ressources/videos/angularjs-bonita-bpm-le-couple-ideal-pour-vos-processus" target="_blank" class="external">French version</a> - <span class="smaller-text">25<sup>th</sup> of September 2014, presented by myself</span></li>
        <li><a href="http://www.bonitasoft.com/for-you-to-read/videos/bonita-bpm-angularjs-ideal-combination-your-process" target="_blank" class="external">English version</a> - <span class="smaller-text">15<sup>th</sup> of October 2014, presented by myself</span></li>
        <li>Spanish version (Not available yet) - <span class="smaller-text">21<sup>st</sup> of October 2014, presented by Olivier D.</span></li>
    </ul>
</div>




<div class="floating-right">
    <img src="http://pozil.github.io/images/2014-09-30-integrating-angularjs-with-bonita-bpm/bonita_bpm_with_angular.png" alt="Bonita BPM + AngularJS" style="background-color:#FAFAFA;"/>
</div>




<h3>Delivering a Successful Business Application</h3>


<p>One of the key challenges when building a Business Application is to focus your efforts on what is essential to the success of the project.
From my experience, delivering an application with the right user experience stands between your path to success or the UAT (User Acceptance Tests) failure.</p>

<h3>Providing the Right User Experience</h3>


<p>Because Bonita BPM native UIs (Portal and forms) are generic and require no development, they often lack the richness or extensibility that are required to build complex business applications.
In consequence, your best chances in passing UAT in such cases is to work with a custom UI solution.</p>

<p class="small-bottom-margin">A custom UI solution working with Bonita Execution Engine (BEE) relies on a stack of 3 components:</p>


<ul>
    <li>a UI framework</li>
    <li>a Bonita API</li>
    <li>the Bonita Execution Engine (BEE)</li>
</ul>




<h3>Picking the Most Efficient Technologies to Assist You</h3>


<p>There are two main technology choice you will have to take: the Bonita API and a UI framework that you will use.</p>

<h4>Choice 1: the Bonita API</h4>


<p class="small-bottom-margin">There are two possible options in the choice of the Bonita API: the Java API or the REST API.</p>


<table class="pro-cons">
<tr>
    <th></th>
    <th>Java API</th>
    <th>REST API</th>
</tr>
</tr>
    <th>Pros</th>
    <td>- Client library is provided</td>
    <td>- Client or server side execution in web apps<br/>
    - Technology agnostic</td>
</tr>
</tr>
    <th>Cons</th>
    <td>- Server side execution in web apps</td>
    <td>- Custom client library needs to be developped</td>
</tr>
</table>


<p>Based on this comparison we will explore the <b>REST API</b> option in this blog post. The client side execution ability is clearly the key added value of REST however it comes at the cost of requiring you to implement a custom client library but we will address this major con later.</p>

<h4>Choice 2: a UI framework</h4>


<p>There are multiple UI frameworks on the market. It is beyond the scope of this blog post to compare all of them so we will focus only on <b>AngularJS</b>.</p>

<p class="small-bottom-margin">We have selected it for the following reasons:</p>


<ul>
    <li>it is a client-side web framework</li>
    <li>it relies on a globaly supported technology (JS)</li>
    <li>it provides MVC services</li>
    <li>it supports dependency injection</li>
</ul>




<h3>Integrating our Custom UI Solution with Bonita BPM</h3>


<p>Now that we have chosen our implementation technologies (REST API and AngularJS), let&rsquo;s focus on how we can integrate that into Bonita BPM existing UI.</p>

<h4>Communicating between AngularJS and the Bonita REST API</h4>


<p>The first concern we have to address will be to implement an AngularJS client library for the Bonita REST API. Fortunately for you, I have created an open project covering that.</p>

<p class="small-bottom-margin">Let me introduce <a href="https://github.com/rodriguelegall/ngBonita" target="_blank" class="external"><b>ngBonita</b></a>, the AngularJS Bonita REST client (disclaimer: this is not an official extension of Bonita BPM). It provides the following:</p>


<ul>
    <li>a set of AngularJS resources mapped to Bonita REST APIs</li>
    <li>efficient queries with support for pagination</li>
    <li>Bonita authentication logic</li>
</ul>


<p>Using it is fairly simple, as shown in the code extract below:</p>

<figure class='code'><figcaption><span>ngBonita code sample</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Declare a dependency to the ngBonita module in your app</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">appMainModule</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;appMainModule&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;ngBonita&#39;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">appMainModule</span><span class="p">.</span><span class="nx">config</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">bonitaConfigProvider</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// Optional call to override Bonita URL setup</span>
</span><span class='line'>  <span class="nx">bonitaConfigProvider</span><span class="p">.</span><span class="nx">setBonitaUrl</span><span class="p">(</span><span class="s1">&#39;http://localhost:8080/bonita&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Application controller</span>
</span><span class='line'><span class="nx">appMainModule</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;AppController&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;$scope&#39;</span><span class="p">,</span> <span class="s1">&#39;$log&#39;</span><span class="p">,</span> <span class="s1">&#39;bonitaConfig&#39;</span><span class="p">,</span> <span class="s1">&#39;bonitaAuthentication&#39;</span><span class="p">,</span> <span class="s1">&#39;ProcessDefinition&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$log</span><span class="p">,</span> <span class="nx">bonitaConfig</span><span class="p">,</span> <span class="nx">bonitaAuthentication</span><span class="p">,</span> <span class="nx">ProcessDefinition</span><span class="p">){</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// Log in Bonita</span>
</span><span class='line'>  <span class="nx">bonitaAuthentication</span><span class="p">.</span><span class="nx">login</span><span class="p">(</span><span class="s1">&#39;walter.bates&#39;</span><span class="p">,</span><span class="s1">&#39;bpm&#39;</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">$log</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Logged in as &#39;</span><span class="o">+</span> <span class="nx">bonitaConfig</span><span class="p">.</span><span class="nx">getUsername</span><span class="p">()</span> <span class="o">+</span><span class="s1">&#39; (id=&#39;</span><span class="o">+</span> <span class="nx">bonitaConfig</span><span class="p">.</span><span class="nx">getUserId</span><span class="p">()</span> <span class="o">+</span><span class="s1">&#39;)&#39;</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>      <span class="c1">// List the user&#39;s apps (process definitions)</span>
</span><span class='line'>      <span class="nx">ProcessDefinition</span><span class="p">.</span><span class="nx">getStartableByCurrentUser</span><span class="p">().</span><span class="nx">$promise</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">processDefinitions</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">$log</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Listing &#39;</span><span class="o">+</span> <span class="nx">processDefinitions</span><span class="p">.</span><span class="nx">totalCount</span> <span class="o">+</span><span class="s1">&#39; process definition(s):&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">&lt;</span><span class="nx">processDefinitions</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>              <span class="nx">$log</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;  - &#39;</span><span class="o">+</span> <span class="nx">processDefinitions</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">name</span> <span class="o">+</span><span class="s1">&#39; &#39;</span><span class="o">+</span> <span class="nx">processDefinitions</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">version</span><span class="p">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">// Logs out of Bonita</span>
</span><span class='line'>          <span class="nx">bonitaAuthentication</span><span class="p">.</span><span class="nx">logout</span><span class="p">();</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure>




<h4>Integrating our AngularJS UI in Bonita Portal</h4>


<p>Now that we have taken care of communicating with Bonita engine, we can focus on our core task: writing our custom UI.</p>

<p>I will not give an AngularJS course in this blog post but I can recommend this excellent course:
<a href="http://campus.codeschool.com/courses/shaping-up-with-angular-js/intro" target="_blank" class="external">Code school&rsquo;s Shaping up with Angular.js</a></p>

<p>Once you have written your application as standalone app, you may want to go one step further and to integrate it with the existing Bonita Portal UI.
Hopefully there is a feature for that: <a href="http://documentation.bonitasoft.com/custom-pages" target="_blank" class="external">Custom Pages</a> (requires an Efficiency or Performance edition).</p>

<p class="small-bottom-margin">Using a custom page, you will be able to embed you AngularJS app into the Bonita portal just like this:</p>


<p><span class='caption-wrapper'><img class='caption' src='http://pozil.github.io/images/2014-09-30-integrating-angularjs-with-bonita-bpm/screenshot_bonita_angular_dashboard.png' width='' height='' title='Custom user dashboard integrated in Bonita Portal'><span class='caption-text'>Custom user dashboard integrated in Bonita Portal</span></span></p>

<p>This custom page uses ngBonita and Bootstrap to present a clean user dashboard to users. You can check out the custom page code from <a href="https://github.com/pozil/bonita-angular-dashboard" target="_blank" class="external">here</a>.</p>

<h3>Conclusion</h3>


<p>In this blog post I have given you an insight on how to deliver a successful business app by providing the right user experience through a custom UI.
We have seen that one of the most efficient way to achieve that by using AngularJS, ngBonita and the Bonita REST API.</p>

<p>Bonitasoft is focused on investing more in AngularJS and REST in the upcoming releases. Follow this trend and create rich custom UIs in order to deliver successful Business Applications with Bonita BPM.</p>

<h3>Resources</h3>


<ul>
    <li><a href="#angular_webinars">Webinar videos</a> (listed at the top of this post)</li>
    <li><a href="https://github.com/rodriguelegall/ngBonita" target="_blank" class="external">ngBonita</a> the AngularJS Bonita REST client</li>
    <li><a href="https://github.com/pozil/bonita-angular-dashboard" target="_blank" class="external">Bonita user dashboard</a>  built on AngularJS and integrated as a custom page in the Bonita Portal</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Preface: Who Am I and What Is This Blog About]]></title>
    <link href="http://pozil.github.io/blog/2014/09/29/preface-who-am-i-and-what-is-this-blog-about/"/>
    <updated>2014-09-29T22:02:55+02:00</updated>
    <id>http://pozil.github.io/blog/2014/09/29/preface-who-am-i-and-what-is-this-blog-about</id>
    <content type="html"><![CDATA[<p>First of all, welcome to my blog.</p>

<p>My name is Philippe Ozil, I have been a Consultant for Bonitasoft since 2010 and I have been involved in 80+ customer projects.
Starting from 2014, I have moved to the position of Technical Evangelist.</p>

<p>I am opening this blog to share my experience about working with Bonita BPM, extending it and integrating it with third party technologies.</p>

<p>Enjoy your reading and I hope you will find this content useful.</p>
]]></content>
  </entry>
  
</feed>
